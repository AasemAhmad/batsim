# Use BTRFS as checkpoint motor

# Assume that the entire disk is in btrfs
btrfs_root: /

enabled?:
  - exec_local: test -f $$kameleon_cwd/checkpoint_enabled
  - exec_local: btrfs subvolume create $$rootfs || true
  - exec_local: btrfs subvolume list $$btrfs_root | grep -q ${$${rootfs}#"/"}

create:
  - exec_local: btrfs subvolume snapshot $$rootfs $${rootfs}-@microstrep_id

# To apply the snapshot simply remove current rootfs, mv the snapshot to
# rootfs and make a backup
apply:
  - exec_local: btrfs subvolume delete $$rootfs
  - exec_local: mv $${rootfs}-@microstrep_id $$rootfs
  - exec_local: btrfs subvolume snapshot $$rootfs $${rootfs}-@microstrep_id

clear:
  - exec_local: |
      $snap_list=$(btrfs subvolume list / | grep ${${rootfs}#"/"} | awk '{print "/"$9 }')
      for snap in $snap_list
      do
          btrfs subvolume delete $snap
      done

list:
  - exec_local: btrfs subvolume list / | grep ${${rootfs}#"/"} | awk '{print "/"$9 }' | grep "${rootfs}-" | sed "s#${rootfs}-##"

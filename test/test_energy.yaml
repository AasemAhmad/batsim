# This script should be called from Batsim's root directory

# If needed, the working directory of this script can be specified within this file
#base_working_directory: ~/proj/batsim

# If needed, the output directory of this script can be specified within this file
#base_output_directory: ~/proj/batsim/results

base_variables:
  agg_dir: ${base_output_directory}/aggregated
  agg_data_file: ${agg_dir}/agg_data.csv

implicit_instances:
  implicit:
    sweep:
      platform :
        - {"name":"homo128", "filename":"platforms/energy_platform_homogeneous_no_net_128.xml"}
      workload :
        - {"name":"tiny", "filename":"workload_profiles/test_workload_profile.json"}
        - {"name":"medium", "filename":"workload_profiles/batsim_paper_workload_example.json"}
      pybatsim_algo:
        - fillerSched
        - easyBackfillNotopo
    generic_instance:
      timeout: 10
      working_directory: ${base_working_directory}
      output_directory: ${base_output_directory}/results/${pybatsim_algo}_${workload["name"]}
      batsim_command: batsim -p ${platform["filename"]} -w ${workload["filename"]} -E -e ${output_directory}/out -s ${output_directory}/socket -L
      sched_command: python2 schedulers/pybatsim/launcher.py ${pybatsim_algo} -s ${output_directory}/socket
      commands_after_execution:
        - cat ${output_directory}/out_schedule.csv | tail -n 1 | tr -d '\n' >> ${agg_data_file}
        - printf ",${platform['name']},${workload['name']},${pybatsim_algo}\n" >> ${agg_data_file}

commands_before_instances:
  - mkdir ${agg_dir}
  - printf "nb_jobs,nb_jobs_finished,nb_jobs_success,nb_jobs_killed,success_rate,makespan,max_turnaround_time,scheduling_time,jobs_execution_time_boundary_ratio,consumed_joules,platform,workload,algo\n" > ${agg_data_file}

commands_after_instances:
  - cp ${agg_data_file} ${agg_dir}/copy_of_data_file.csv
  - diff ${agg_data_file} ${agg_dir}/copy_of_data_file.csv

#==============================================================================
# vim: softtabstop=2 shiftwidth=2 expandtab fenc=utf-8 cc=81 tw=80
#==============================================================================
#
# DESCRIPTION: An applicance for batsim experimentation
#
#==============================================================================

---
## Choose one of them the following extends
checkpoint: btrfs.yaml
extend: default/chroot/debian8.yaml

#extend: default/virtualbox/debian8.yaml

#extend: default/qemu/debian8.yaml

global:
  virtualbox_memory_size: 2048
  qemu_memory_size : 2048
  appliance_formats: tar.gz qcow2 vdi
  appliance_tar_compression_level: fast
  btrfs_volume: "/"
  setup_packages: $$setup_packages git cmake build-essential e2fsprogs
  default_keyboard_layout: fr
  default_timezone: Europe/Paris
  root_password: root
  hostname: batsim
  simctn_dir: /root


bootstrap:
  - "@base"

setup:
  #
  # General configuration
  #
  - "@base"
  - enable_root_login:
    - change_sshd_config:
      - exec_in: sed -i s/PermitRootLogin\ without-password/PermitRootLogin\ yes/ /etc/ssh/sshd_config

  #
  # Simulator and schedulers install
  #
  - simgrid_install:
    - prefix: /usr/local
    - commit_hash: be8f70f
    - install dependencies:
      - exec_in: apt-get -y --force-yes install libboost-all-dev 2>&1
    - do_it:
      - exec_in: |
          mkdir -p $$simctn_dir
          cd $$simctn_dir
          git clone git://scm.gforge.inria.fr/simgrid/simgrid.git
      - exec_in: |
          cd $$simctn_dir/simgrid
          git checkout $$commit_hash
          mkdir build
      - exec_in: |
          cd $$simctn_dir/simgrid/build
          cmake -DCMAKE_INSTALL_PREFIX=$$prefix -Denable_documentation=OFF ../
          make -j$(nproc)
          make install
  - fred_scheduler:
    - install dependencies:
      - exec_in: |
          apt-get -y --force-yes install \
          liblog-log4perl-perl \
          libjson-perl \
          liblist-moreutils-perl \
          libfile-slurp-perl \
          2>&1
    - get_it:
      - exec_in: |
          cd $$simctn_dir
          git clone https://github.com/wagnerf42/batch-simulator.git
      - exec_in: |
          cd $$simctn_dir/batch-simulator
          git checkout 12df12a
          cd ProcessorRange
          perl Makefile.PL
          make
          make install
          cd ..
          cp log4perl.conf.template log4perl.conf
  - oar_sched:
    - install dependencies:
      - exec_in: apt-get -y --force-yes install python3-pip 2>&1
    - install_oar_lib:
      - exec_in: |
          cd $$simctn_dir
          git clone https://github.com/oar-team/oar-lib.git
      - exec_in: |
          cd $$simctn_dir/oar-lib
          git checkout a1a59f1e36
          pip3 install -e .
    - install_oar_kao:
      - exec_in: |
          cd $$simctn_dir
          git clone https://github.com/oar-team/oar-kao.git
      - exec_in: |
          cd $$simctn_dir/oar-kao
          git checkout 4090933eda9
          pip3 install -e .
  - batsim_install:
    - install dependencies:
      - exec_in: |
          apt-get -y --force-yes install \
          libboost-filesystem-dev \
          libboost-system-dev 2>&1
      # Install rapidjson (not available in jessy)
      - exec_in: |
          cd $$simctn_dir
          git clone https://github.com/miloyip/rapidjson.git
      - exec_in: |
          cd $$simctn_dir/rapidjson
          git checkout 3d5848a # v1.02
          cp -a include/rapidjson /usr/include
    - do_it:
      - exec_in: |
          cd $$simctn_dir
          git clone https://scm.gforge.inria.fr/anonscm/git/batsim/batsim.git
      - exec_in: |
          cd $$simctn_dir/batsim
          git checkout 64497dd2de07
          mkdir build
      - exec_in: |
          cd $$simctn_dir/batsim/build
          cmake ..
          make -j$(nproc)
          make install

  - SMPI_tracing:
    - Extrae:
      # install dependencies
      - exec_in: apt-get install -y openmpi
      # get source and extract
      - local2in:
        - $$kameleon_data_dir/extrae-3.2.1.tar.bz2
        - $$simctn_dir/extrae-3.2.1.tar.bz2
      - exec_in: tar xf $$simctn_dir/extrae-3.2.1.tar.bz2
      - exec_in: |
            cd $$simctn_dir/extrae-3.2.1
            MPICC=/usr/bin/mpicc ./configure --prefix=/usr \
              --with-mpi=/usr/lib/openmpi/ \
              --without-unwind \
              --without-dyninst \
              --without-papi \
              --disable-openmp \
              --with-mpi-headers=/usr/include/openmpi/ \
              --with-mpi-libs=/usr/lib/openmpi
            make
            make install

    - install_NAS_bench:
      - download_file_in:
        - https://www.nas.nasa.gov/assets/npb/NPB3.3.1.tar.gz
        - $$simctn_dir/NPB3.3.1
    - configure_make_def:
      - exec_in: |
          cd $$simctn_dir/NPB3.3.1
          cp config/make.def{.template,}
          sed -i 's/^MPIF77.*/MPIF77 = mpif77/' config/make.def
          sed -i 's/^MPICC.*/MPICC = mpicc/' config/make.def

  #
  # Visualization tools
  #
  - VITE_install:
    - get_sources:
      - exec_in: |
          cd $$simctn_dir
          svn checkout svn://scm.gforge.inria.fr/svnroot/vite/
    - install_it:
      - exec_in: |
          cd $$simctn_dir/vite/trunk
          mkdir build
          cd build
          cmake ..
          make -j$(nproc)
          make install

  - evalys:
    - install dependencies:
      - exec_in: |
          apt-get -y --force-yes install \
            python3-pip \
            python3-pyqt4 \
            python3-matplotlib \
            python3-pandas \
            ipython3-notebook \
            python3-mpld3
    - install_evalys:
      - exec_in: |
          cd $$simctn_dir
          git clone https://github.com/oar-team/evalys.git
      - exec_in: |
          cd $$simctn_dir/evalys
          pip3 install -e .

  #
  # Experiment inputs and launch scripts
  #
  - import_experiment_material:
    - install_expe_batsim:
      - exec_in: |
          cd $$simctn_dir
          git clone https://scm.gforge.inria.fr/anonscm/git/expe-batsim/expe-batsim.git
    - install_dependencies:
      # For experiment.py
      - exec_in: pip3 install sortedcontainers docopt
      # For prv2tit.pl
      - exec_in: apt-get install -y libswitch-perl

  #
  # Personal customization
  #

  # Import my personal dev tools
  - my_dev_tools
  # set the dev git repository instead of the Read-Only ones
  - set_dev_git_repo

export:
  - "@base"
